{"version":3,"file":"static/webpack/static/development/pages/items.js.f04fd1f1a1cf12e0b162.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { mutation, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\n\nconst DELETE_ITEM_MUTATION = gql`\n    mutation DELETE_ITEM_MUTATION($id: ID!) {\n        deleteItem(id: $id) {\n            id\n        }\n    }\n`;\n\nclass DeleteItem extends Component {\n    update = (cache, payload) => {\n        // manually update the cache on the client, so it matches the server\n        // Read the cache for the items we want\n        const data = cache.readQuery({ query: ALL_ITEMS_QUERY});\n        // fILTER THE DELETED ITEM OUT OF THE PAGE \n        data.items = data.items.filter( item => item.id !== payload.data.deleteItem.id)\n        // Put the items back \n        cache.writeQuery({ query: ALL_ITEMS_QUERY, data})\n    }\n    render() {\n        return (\n            <Mutation\n                 mutation={DELETE_ITEM_MUTATION} \n                 variables={{id: this.props.id }}\n                 update={this.update}\n            >\n                { (deleteItem, {error}) => (\n                    <button onClick={ () => { deleteItem()}}>\n                        {this.props.children}\n                    </button>\n                )}\n            </Mutation>\n            \n        );\n    }\n}\n\nexport default DeleteItem;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;;;;AAzBA;AACA;AA2BA;;;;A","sourceRoot":""}